{"version":3,"sources":["../../../../src/gatsby-node/create-pages/create-index-page.js"],"names":["require","log","COLOR","PAGE_TEMPLATES","queryMarkdown","graphql","path","then","result","errors","console","data","mdx","module","exports","createIndexPage","ocularOptions","actions","createPage","pages","PAGES","slice","indexPage","find","p","componentUrl","INDEX_PAGE_URL","content","HOME_MARKDOWN","push","color","CYAN","priority","page","loadContent","Promise","resolve","component","context","title"],"mappings":";;;;;;;;AAAA,eAAqBA,OAAO,CAAC,iBAAD,CAA5B;AAAA,IAAOC,GAAP,YAAOA,GAAP;AAAA,IAAYC,KAAZ,YAAYA,KAAZ;;AAEA,IAAMC,cAAc,GAAGH,OAAO,CAAC,kBAAD,CAA9B;;AAKA,SAASI,aAAT,CAAuBC,OAAvB,EAAgCC,IAAhC,EAAsC;AACpC,SAAOD,OAAO,2DAGDC,IAHC,kDAAP,CAQLC,IARK,CAQA,UAACC,MAAD,EAAY;AACjB,QAAIA,MAAM,CAACC,MAAX,EAAmB;AAEjBC,MAAAA,OAAO,CAACT,GAAR,CAAYO,MAAM,CAACC,MAAnB;AACA,aAAO,EAAP;AACD;;AACD,WAAOD,MAAM,CAACG,IAAP,CAAYC,GAAnB;AACD,GAfM,CAAP;AAgBD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,OAA6CC,aAA7C,EAA4D;AAAA,MAAlCX,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBY,OAAyB,QAAzBA,OAAyB;AAC3E,MAAOC,UAAP,GAAqBD,OAArB,CAAOC,UAAP;AAEA,MAAMC,KAAK,GAAGH,aAAa,CAACI,KAAd,GAAsBJ,aAAa,CAACI,KAAd,CAAoBC,KAApB,EAAtB,GAAoD,EAAlE;AACA,MAAIC,SAAS,GAAGH,KAAK,CAACI,IAAN,CAAW,UAACC,CAAD;AAAA,WAAOA,CAAC,CAAClB,IAAF,KAAW,GAAlB;AAAA,GAAX,CAAhB;;AACA,MAAIgB,SAAJ,EAAe;AACbA,IAAAA,SAAS,CAACG,YAAV,GAAyBH,SAAS,CAACG,YAAV,IAA0BtB,cAAc,CAAC,gBAAD,CAAjE;AACD,GAFD,MAEO;AACLmB,IAAAA,SAAS,GAAG;AACVhB,MAAAA,IAAI,EAAE,GADI;AAGVmB,MAAAA,YAAY,EAAET,aAAa,CAACU,cAAd,IAAgCvB,cAAc,CAAC,gBAAD,CAHlD;AAIVwB,MAAAA,OAAO,EAAEX,aAAa,CAACY;AAJb,KAAZ;AAMAT,IAAAA,KAAK,CAACU,IAAN,CAAWP,SAAX;AACD;;AAEDrB,EAAAA,GAAG,CAACA,GAAJ,CACE;AAAC6B,IAAAA,KAAK,EAAE5B,KAAK,CAAC6B,IAAd;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GADF,yCAEkCV,SAAS,CAACG,YAF5C;;AAjB2E,6CAsBxDN,KAtBwD;AAAA;;AAAA;AAAA;AAAA,UAsBhEc,IAtBgE;AAuBzE,UAAMC,WAAW,GAAGD,IAAI,CAACN,OAAL,GAAevB,aAAa,CAACC,OAAD,EAAU4B,IAAI,CAACN,OAAf,CAA5B,GAAsDQ,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAA1E;AAEAF,MAAAA,WAAW,CAAC3B,IAAZ,CAAiB,UAACC,MAAD,EAAY;AAC3BU,QAAAA,UAAU,CAAC;AACTmB,UAAAA,SAAS,EAAEJ,IAAI,CAACR,YAAL,IAAqBtB,cAAc,CAAC,mBAAD,CADrC;AAETG,UAAAA,IAAI,EAAE2B,IAAI,CAAC3B,IAFF;AAGTgC,UAAAA,OAAO,EAAE;AACPC,YAAAA,KAAK,EAAEN,IAAI,CAACM,KADL;AAEPZ,YAAAA,OAAO,EAAEnB;AAFF;AAHA,SAAD,CAAV;AAQD,OATD;AAzByE;;AAsB3E,wDAA0B;AAAA;AAazB;AAnC0E;AAAA;AAAA;AAAA;AAAA;AAoC5E,CApCD","sourcesContent":["const {log, COLOR} = require('../../utils/log');\n\nconst PAGE_TEMPLATES = require('./page-templates');\n\n// Create static pages\n// NOTE: gatsby does automatically build pages from **top level** `/pages`, folder\n// but in ocular we keep those pages in the installed structure so gatsby can't see them\nfunction queryMarkdown(graphql, path) {\n  return graphql(\n    `{\n      mdx(fileAbsolutePath: {\n        eq: \"${path}\"\n      }) {\n        body\n      }\n    }`\n  ).then((result) => {\n    if (result.errors) {\n      /* eslint no-console: \"off\" */\n      console.log(result.errors);\n      return '';\n    }\n    return result.data.mdx;\n  });\n}\n\nmodule.exports = function createIndexPage({graphql, actions}, ocularOptions) {\n  const {createPage} = actions;\n\n  const pages = ocularOptions.PAGES ? ocularOptions.PAGES.slice() : [];\n  let indexPage = pages.find((p) => p.path === '/');\n  if (indexPage) {\n    indexPage.componentUrl = indexPage.componentUrl || PAGE_TEMPLATES['INDEX_PAGE_URL'];\n  } else {\n    indexPage = {\n      path: '/',\n      // Deprecated options\n      componentUrl: ocularOptions.INDEX_PAGE_URL || PAGE_TEMPLATES['INDEX_PAGE_URL'],\n      content: ocularOptions.HOME_MARKDOWN\n    };\n    pages.push(indexPage);\n  }\n\n  log.log(\n    {color: COLOR.CYAN, priority: 1},\n    `Creating index page from url ${indexPage.componentUrl}}`\n  )();\n\n  for (const page of pages) {\n    const loadContent = page.content ? queryMarkdown(graphql, page.content) : Promise.resolve(null);\n\n    loadContent.then((result) => {\n      createPage({\n        component: page.componentUrl || PAGE_TEMPLATES['MARKDOWN_PAGE_URL'],\n        path: page.path,\n        context: {\n          title: page.title,\n          content: result\n        }\n      });\n    });\n  }\n};\n"],"file":"create-index-page.js"}