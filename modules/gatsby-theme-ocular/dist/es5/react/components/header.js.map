{"version":3,"sources":["../../../../src/react/components/header.jsx"],"names":["Header","props","state","collapsed","links","handleClick","bind","setState","Component","propTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAqBA;;AACA;;;;;;;;;;IASqBA,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8BAAMA,KAAN;AAKA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,KAAK,EAAE,iCAAoBH,KAApB;AAFI,KAAb;AAIA,UAAKI,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,6CAAnB;AAViB;AAWlB;;;;WAED,uBAAc;AACZ,WAAKC,QAAL,CAAc;AAACJ,QAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,OAAd;AACD;;;WAgBD,kBAAS;AACP,wBAA2B,KAAKD,KAAhC;AAAA,UAAOE,KAAP,eAAOA,KAAP;AAAA,UAAcD,SAAd,eAAcA,SAAd;AACA,aACE,6BAAC,eAAD,6BACM,KAAKF,KADX;AAEE,QAAA,KAAK,EAAEG,KAFT;AAGE,QAAA,eAAe,EAAE,KAHnB;AAIE,QAAA,kBAAkB,EAAE,CAACD,SAJvB;AAKE,QAAA,kBAAkB,EAAE,KAAKE,WAL3B;AAME,QAAA,eAAe,EAAE,2BAAM,CAAE;AAN3B,SADF;AAUD;;;EA5CiCG,gB;;;AA+CpCR,MAAM,CAACS,SAAP,GAAmBA,iBAAnB","sourcesContent":["/* eslint-disable react/no-array-index-key */\n// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport ControlledHeader, {generateHeaderLinks, propTypes} from './header.component';\n\n// we are exposing 2 header components.\n// 1 - DocsHeader, which will update the state of the top level layout.\n//   we need to expose whether the menu is toggled or not because it could\n//   affect how TOC is displayed in smaller screens.\n// 2 - Header, which won't and just maintain its own state.\n// both components are wrappers around ControlledHeader.\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n    // we need to know the number of links before render.\n    // this is not an ideal solution.\n    // some of the links which are hardcoded should come from configuration\n    // TODO - let's create the links server side, then pass them to the template as props.\n    this.state = {\n      collapsed: true,\n      links: generateHeaderLinks(props)\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  // note that rn, we don't render stars per design, but this could change\n  /*\n  renderStars() {\n    const {config} = this.props;\n    if (config.PROJECT_TYPE === 'github') {\n      return (\n        <GithubStars project={`${config.PROJECT_ORG}/${config.PROJECT_NAME}`} />\n      );\n    }\n\n    return null;\n  }\n  */\n\n  render() {\n    const {links, collapsed} = this.state;\n    return (\n      <ControlledHeader\n        {...this.props}\n        links={links}\n        isLinksMenuOpen={false}\n        isProjectsMenuOpen={!collapsed}\n        toggleProjectsMenu={this.handleClick}\n        toggleLinksMenu={() => {}}\n      />\n    );\n  }\n}\n\nHeader.propTypes = propTypes;\n"],"file":"header.js"}