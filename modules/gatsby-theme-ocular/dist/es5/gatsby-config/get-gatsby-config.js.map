{"version":3,"sources":["../../../src/gatsby-config/get-gatsby-config.js"],"names":["urljoin","require","log","COLOR","validateConfig","CONFIG_SCHEMA","defaults","logLevel","DOC_FOLDERS","CODESANDBOX_FOLDER","ROOT_FOLDER","SOURCE","EXAMPLES","DOCS","HEADER_LINK_URL","LINK_TO_GET_STARTED","PROJECT_TYPE","PROJECT_NAME","PROJECT_ORG","PROJECT_URL","PROJECT_DESC","PAGES","PATH_PREFIX","PROJECT_IMAGE","PROJECT_ORG_LOGO","PROJECTS","HOME_PATH","THEME_OVERRIDES","STYLESHEETS","ADDITIONAL_LINKS","GA_TRACKING_ID","GITHUB_KEY","webpack","getRemarkPlugins","paddedConfig","remarkPlugins","resolve","options","maxWidth","offsetY","removeAccents","enableCustomId","directory","protocol","embedOptions","codemirror","fontsize","hidenavigation","view","getIframe","url","module","exports","getGatsbyConfig","config","priority","color","CYAN","JSON","stringify","gatsbyConfig","pathPrefix","siteMetadata","siteUrl","plugins","extensions","gatsbyRemarkPlugins","docDirs","DOC_FOLDER","concat","filter","Boolean","length","path","push","name","ignore","YELLOW","srcDirs","Array","isArray","example","category"],"mappings":"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","sourcesContent":["const urljoin = require('url-join');\n\nconst {log, COLOR} = require('../utils/log');\nconst validateConfig = require('../utils/validate-config');\nconst CONFIG_SCHEMA = require('./config-schema');\n\nconst defaults = {\n  logLevel: 3,\n  DOC_FOLDERS: [],\n  CODESANDBOX_FOLDER: './',\n  ROOT_FOLDER: './',\n  SOURCE: 'website/src',\n  EXAMPLES: [],\n  DOCS: {},\n  HEADER_LINK_URL: '/',\n  LINK_TO_GET_STARTED: '/docs',\n  PROJECT_TYPE: '',\n  PROJECT_NAME: 'Ocular',\n  PROJECT_ORG: 'uber-web',\n  PROJECT_URL: 'http://localhost/',\n  PROJECT_DESC: '',\n  PAGES: [],\n  PATH_PREFIX: '/',\n  PROJECT_IMAGE: '',\n  PROJECT_ORG_LOGO: '',\n  PROJECTS: [],\n  HOME_PATH: '',\n  THEME_OVERRIDES: '',\n  STYLESHEETS: [],\n  ADDITIONAL_LINKS: [],\n  GA_TRACKING_ID: null,\n  GITHUB_KEY: null,\n  webpack: {}\n};\n\nfunction getRemarkPlugins(paddedConfig) {\n  const remarkPlugins = [\n    // Processes images in markdown so they can be used in the production build.\n    // In the processing, it make images responsive by:\n    // Adding an elastic container to hold the size of the image while it loads\n    // to avoid layout jumps. Generating multiple versions of images at different\n    // widths and sets the srcset and sizes of the img element so regardless\n    // of the width of the device, the correct image is downloaded.\n    // Using the 'blur up' technique popularized by Medium and Facebook where a small\n    // 20px wide version is shown as placeholder until actual image is downloaded.\n    {\n      resolve: 'gatsby-remark-images',\n      options: {\n        maxWidth: 690\n      }\n    },\n    // Wraps iframes or objects (e.g. embedded YouTube videos) within markdown files\n    // in a responsive elastic container with a fixed aspect ratio. This ensures that\n    // the iframe or object will scale proportionally and to the full width of its container.\n    'gatsby-remark-responsive-iframe',\n    // Adds syntax highlighting to code blocks in markdown files using PrismJS.\n    // To load a theme, just require its CSS file in your gatsby-browser.js file, e.g.\n    // require('prismjs/themes/prism-solarizedlight.css')\n    'gatsby-remark-prismjs',\n    // Copies local files linked to/from markdown to your public folder.\n    'gatsby-remark-copy-linked-files',\n    // Adds GitHub-style hover links to headers in your markdown files when theyâ€™re rendered.\n    {\n      resolve: 'gatsby-remark-autolink-headers',\n      options: {\n        offsetY: 64,\n        removeAccents: true,\n        enableCustomId: true\n      }\n    },\n    {\n      resolve: 'gatsby-remark-embedded-codesandbox',\n      options: {\n        directory: `${paddedConfig.CODESANDBOX_FOLDER}`,\n        protocol: 'embedded-codesandbox://',\n        embedOptions: {\n          // https://codesandbox.io/docs/embedding#embed-options\n          codemirror: 1,\n          fontsize: 12,\n          hidenavigation: 1,\n          view: 'split'\n        },\n        getIframe: (url) =>\n          `<iframe src=\"${url}\" style=\"width: 70vw; height: 70vh;\" class=\"embedded-codesandbox\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>`\n      }\n    }\n  ];\n\n  return remarkPlugins;\n}\n\nmodule.exports = function getGatsbyConfig(config) {\n  const {logLevel = 0} = config;\n  log.priority = logLevel;\n\n  log.log({color: COLOR.CYAN, priority: 0}, 'Loading gatsby config')();\n  log.log({color: COLOR.CYAN, priority: 4}, `GATSBY CONFIG ${JSON.stringify(config, null, 3)}`)();\n\n  // TODO/javidhsueh: we might want to throw an error if the config is invalid\n  // Right now we only print out warning/error messages\n\n  // config padding\n  // those values are required to support the query in ../site-query.jsx\n  // if they don't exist, we provide empty values so that the query won't fail\n  const paddedConfig = {\n    ...defaults,\n    ...config\n  };\n  // validate the entire config and print the errors/warnings in the console\n  validateConfig(paddedConfig, CONFIG_SCHEMA);\n  const remarkPlugins = getRemarkPlugins(paddedConfig);\n\n  const gatsbyConfig = {\n    pathPrefix: paddedConfig.PATH_PREFIX,\n\n    // Site Metadata is populated from config (and react-helmet, see gatsby-plugin-react-helmet)\n    siteMetadata: {\n      config: paddedConfig,\n\n      siteUrl: urljoin(paddedConfig.PROJECT_URL, paddedConfig.PATH_PREFIX)\n    },\n\n    plugins: [\n      // Reads metadata from the React Helmet component\n      'gatsby-plugin-react-helmet',\n      // A Gatsby plugin for styled-components with built-in server-side rendering support.\n      'gatsby-plugin-styled-components',\n      // Exposes several image processing functions built on the Sharp image processing library.\n      // This is a low-level helper plugin generally used by other Gatsby plugins.\n      // You generally shouldn't be using this directly unless doing custom image processing.\n      'gatsby-plugin-sharp',\n      'gatsby-transformer-sharp',\n\n      // Register plugins used by MDX\n      ...remarkPlugins,\n\n      // Transforms markdown (.md, .mdx) nodes, converting the raw markdown to HTML\n      {\n        resolve: 'gatsby-plugin-mdx',\n        options: {\n          extensions: [`.md`, `.mdx`],\n          // These are sub-plugins for gatsby-plugin-mdx\n          gatsbyRemarkPlugins: remarkPlugins\n        }\n      },\n\n      // Transforms JSON files in the data source into JSON nodes\n      'gatsby-transformer-json'\n    ]\n  };\n\n  // Generates gatsby nodes for markdown files and JSON file in the in the docs folder\n  const docDirs = [paddedConfig.DOC_FOLDER].concat(paddedConfig.DOC_FOLDERS).filter(Boolean);\n\n  if (docDirs.length > 0) {\n    // Generates gatsby nodes for markdown files and JSON file in the in the docs folder\n    for (const path of docDirs) {\n      gatsbyConfig.plugins.push({\n        resolve: 'gatsby-source-filesystem',\n        options: {\n          name: 'docs',\n          path,\n          // Ensure gatsby-source-filesystem doesn't pick up too many files in modules directory\n          // https://www.gatsbyjs.org/packages/gatsby-source-filesystem/#options\n          ignore: ['**/src/**', '**/test/**', '**/dist/**', '**/package.json', '**/*.js']\n        }\n      });\n    }\n  } else {\n    log.log({color: COLOR.YELLOW}, `DOC_FOLDERS not specified in gatsby-theme-ocular config}`)();\n  }\n\n  if (paddedConfig.SOURCE) {\n    // Generates gatsby nodes for files in the website's src folder\n    const srcDirs = Array.isArray(paddedConfig.SOURCE)\n      ? paddedConfig.SOURCE\n      : [paddedConfig.SOURCE];\n    for (const path of srcDirs) {\n      gatsbyConfig.plugins.push({\n        resolve: 'gatsby-source-filesystem',\n        options: {\n          name: 'src',\n          path\n        }\n      });\n    }\n  } else {\n    log.log({color: COLOR.YELLOW}, `SOURCE not found in gatsby-theme-ocular config}`)();\n  }\n\n  if (paddedConfig.THEME_OVERRIDES) {\n    // GraphQL does not handle arbitrary objects\n    paddedConfig.THEME_OVERRIDES = JSON.stringify(paddedConfig.THEME_OVERRIDES);\n  }\n\n  if (paddedConfig.EXAMPLES.length) {\n    for (const example of paddedConfig.EXAMPLES) {\n      example.category = example.category || 'Examples';\n    }\n  }\n\n  log.log(\n    {color: COLOR.CYAN, priority: 2},\n    `GENERATED GATSBY CONFIG: ${JSON.stringify(gatsbyConfig, null, 2)}`\n  )();\n  return gatsbyConfig;\n};\n"],"file":"get-gatsby-config.js"}