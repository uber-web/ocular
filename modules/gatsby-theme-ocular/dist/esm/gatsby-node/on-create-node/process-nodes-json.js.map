{"version":3,"sources":["../../../../src/gatsby-node/on-create-node/process-nodes-json.js"],"names":["path","require","log","COLOR","removeURLPathPrefix","tableOfContents","processEntry","chapter","entry","docNodes","ocularOptions","color","RED","title","relPath","replace","HOME_PATH","docNode","id","priority","markdown","childMdx","CYAN","traverseTableOfContents","chapters","level","forEach","entries","module","exports","processNewDocsJsonNode","node","concat","Object","keys","length","JSON","stringify"],"mappings":"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","sourcesContent":["const path = require('path');\nconst {log, COLOR} = require('../../utils/log');\nconst {removeURLPathPrefix} = require('../../utils/links-utils');\n/* eslint-disable no-param-reassign */\nlet tableOfContents = null;\n\nfunction processEntry(chapter, entry, docNodes, ocularOptions) {\n  if (!entry.entry) {\n    // TODO/ib - make probe's log.warn emit color\n    // log.warn({color: COLOR.RED}, 'missing entry in chapter', chapter.title, entry)();\n    log.log({color: COLOR.RED}, 'missing entry in chapter', chapter.title, entry)();\n    return;\n  }\n  let relPath = entry.entry\n    .replace(/^\\//, '')\n    .replace(/\\.[^/.]+$/, '')\n    .replace(/\\/$/, '')\n    .replace('/README', '');\n  // remove prefix from the path to set HOME_PATH as root url (index)\n  if (ocularOptions.HOME_PATH) {\n    relPath = removeURLPathPrefix(relPath, ocularOptions.HOME_PATH);\n  }\n  const docNode = docNodes[relPath] || null;\n  if (!docNode || !docNode.id) {\n    // TODO/ib - make probe's log.warn emit color\n    log.log(\n      {priority: 4, color: COLOR.RED},\n      `unmatched toc entry for \"${relPath}\" ${chapter.title}`,\n      docNode\n    )();\n  } else {\n    entry.id = [docNode.id];\n    entry.markdown = [docNode.id];\n    // note - we don't need to have the entire docNode put in here.\n    // the app will only use the fields/slug and frontmatter/title properties.\n    entry.childMdx = docNode;\n    log.log({color: COLOR.CYAN, priority: 2}, 'doc page', chapter.title, entry.entry)();\n  }\n}\n\nfunction traverseTableOfContents(chapters, docNodes, level, ocularOptions) {\n  (chapters || []).forEach((chapter) => {\n    chapter.level = level;\n    if (chapter.chapters) {\n      traverseTableOfContents(chapter.chapters, docNodes, level + 1, ocularOptions);\n    }\n    const entries = chapter.entries || [];\n    (entries || []).forEach((entry) => {\n      processEntry(chapter, entry, docNodes, ocularOptions);\n    });\n  });\n}\n\n// Patches up new markdown nodes\n//\nmodule.exports.processNewDocsJsonNode = function processNewDocsJsonNode(\n  {node},\n  ocularOptions,\n  docNodes\n) {\n  traverseTableOfContents(node.chapters, docNodes, 1, ocularOptions);\n  // merge table of contents\n  if (tableOfContents) {\n    tableOfContents.chapters = tableOfContents.chapters.concat(node.chapters);\n  } else {\n    tableOfContents = node;\n  }\n\n  log.log(\n    {color: COLOR.CYAN, priority: 3},\n    `Processing tableOfContents \\\n${Object.keys(docNodes).length}\n${tableOfContents.length}\n//${JSON.stringify(Object.keys(docNodes), null, 0)}\n`\n    // ${JSON.stringify(tableOfContents, null, 0)}\n  )(); // , Object.keys(docNodes));\n  return tableOfContents;\n};\n"],"file":"process-nodes-json.js"}