{"version":3,"sources":["../../../src/gatsby-node/source-nodes.js"],"names":["require","log","COLOR","sourceNodes","actions","createTypes","typeDefs","color","YELLOW","priority","module","exports"],"mappings":"AAAA,eAAqBA,OAAO,CAAC,cAAD,CAA5B;AAAA,IAAOC,GAAP,YAAOA,GAAP;AAAA,IAAYC,KAAZ,YAAYA,KAAZ;;AAEA,SAASC,WAAT,OAAgC;AAAA,MAAVC,OAAU,QAAVA,OAAU;AAC9B,MAAOC,WAAP,GAAsBD,OAAtB,CAAOC,WAAP;AAYA,MAAMC,QAAQ,o3EAAd;AA2HAL,EAAAA,GAAG,CAACA,GAAJ,CAAQ;AAACM,IAAAA,KAAK,EAAEL,KAAK,CAACM;AAAd,GAAR;AACAP,EAAAA,GAAG,CAACA,GAAJ,CAAQ;AAACQ,IAAAA,QAAQ,EAAE,CAAX;AAAcF,IAAAA,KAAK,EAAEL,KAAK,CAACM;AAA3B,GAAR,cAAwDF,QAAxD;AACAD,EAAAA,WAAW,CAACC,QAAD,CAAX;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBR,WAAjB","sourcesContent":["const {log, COLOR} = require('../utils/log');\n\nfunction sourceNodes({actions}) {\n  const {createTypes} = actions;\n  // see https://graphql-compose.github.io/en/ for instructions on how to create types\n  // see https://www.gatsbyjs.org/blog/2019-03-04-new-schema-customization/ for information on schema customization\n\n  // these type definitions support the site metadata and table of contents.\n  // when gastby tries to infer these schemas from contents as it is read,\n  // it requires it to have a very strict shape by defining the schema independently\n  // of the content of the file we can be more flexible.\n\n  // Having ImageSharp type is to enfore the `allImageSharp` node exists in the schema\n  // Original disussion: https://github.com/gatsbyjs/gatsby/issues/14304\n  // PR: https://github.com/uber-web/ocular/pull/195\n  const typeDefs = `\n\n    type Examples implements Node {\n      category: String\n      title: String\n      componentUrl: String\n      path: String\n      image: String\n    }\n\n    type HomeBullets implements Node {\n      text: String\n      desc: String\n      img: String\n    }\n\n    type AdditionalLinks implements Node {\n      name: String\n      href: String\n      index: Int\n    }\n\n    type PageDesc implements Node {\n      path: String\n      componentUrl: String\n      content: String\n    }\n\n    type Projects implements Node {\n      name: String\n      url: String\n    }\n\n    type Config implements Node {\n      PROJECT_NAME: String\n      PROJECT_TYPE: String\n      PROJECT_DESC: String\n\n      PROJECT_URL: String\n      WEBSITE_PATH: String\n      HOME_PATH: String\n\n      HEADER_LINK_URL: String\n\n      PROJECT_ORG_LOGO: String\n\n      PAGES: [PageDesc]\n\n      ROOT_FOLDER: String\n      DOC_FOLDER: String\n      DOC_FOLDERS: [String]\n      CODESANDBOX_FOLDER: String\n\n      GA_TRACKING_ID: String\n      GITHUB_KEY: String\n      ADDITIONAL_LINKS: [AdditionalLinks]\n      LINK_TO_GET_STARTED: String\n      PROJECTS: [Projects]\n      EXAMPLES: [Examples]\n      STYLESHEETS: [String]\n\n      siteUrl: String\n      pathPrefix: String\n      dateFromFormat: String\n    }\n\n    type SiteMetadata implements Node {\n      config: Config\n    }\n\n    type Site implements Node {\n      siteMetadata: SiteMetadata\n    }\n\n    type EntryFrontMatter implements Node {\n      title: String\n    }\n\n    type EntryFields implements Node {\n      slug: String\n    }\n\n    type EntryHeading implements Node {\n      value: String\n    }\n\n    type EntrychildMdx implements Node {\n      frontmatter: EntryFrontMatter\n      fields: EntryFields\n      headings: [EntryHeading]\n    }\n\n    type Entry implements Node {\n      childMdx: EntrychildMdx\n    }\n\n    type lvl2Chapter implements Node {\n      title: String\n      level: Int\n      entries: [Entry]\n    }\n\n    type lvl1Chapter implements Node {\n      title: String\n      level: Int\n      chapters: [lvl2Chapter]\n      entries: [Entry]\n    }\n\n    type docsJson implements Node {\n      chapters: [lvl1Chapter]\n      entries: [Entry]\n    }\n\n    type DocsJson implements Node {\n      chapters: [lvl1Chapter]\n      entries: [Entry]\n    }\n\n    type ImageSharp implements Node {\n      id: ID!\n    }\n    `;\n  log.log({color: COLOR.YELLOW}, `Set up graphql schemas`)();\n  log.log({priority: 4, color: COLOR.YELLOW}, `Schemas:`, typeDefs)();\n  createTypes(typeDefs);\n}\n\nmodule.exports = sourceNodes;\n"],"file":"source-nodes.js"}