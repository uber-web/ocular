{"version":3,"sources":["../../../../src/react/styled/body.js"],"names":["styled","isMobile","props","theme","breakpoints","medium","BodyContainerFull","div","sizing","scale1600","BodyContainerToC","BodyContainerInner","Body","typography","font300"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,iDACWA,KAAK,CAACC,KAAN,CAAYC,WAAZ,CAAwBC,MADnC;AAAA,CAAjB;AAIP,OAAO,IAAMC,iBAAiB,GAAGN,MAAM,CAACO,GAAV,gKAEjB,UAACL,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYK,MAAZ,CAAmBC,SAA9B;AAAA,CAFiB,EAG1BR,QAH0B,CAAvB;AAiBP,OAAO,IAAMS,gBAAgB,GAAGV,MAAM,CAACO,GAAV,uNAGhB,UAACL,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYK,MAAZ,CAAmBC,SAA9B;AAAA,CAHgB,EAIzBR,QAJyB,EAKF,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYK,MAAZ,CAAmBC,SAA9B;AAAA,CALE,CAAtB;AAWP,OAAO,IAAME,kBAAkB,GAAGX,MAAM,CAACO,GAAV,iIAAxB;AAMP,OAAO,IAAMK,IAAI,GAAGZ,MAAM,CAACO,GAAV,4HACP,UAACL,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAN,CAAYU,UAAZ,CAAuBC,OAAlC;AAAA,CADO,CAAV","sourcesContent":["import styled from 'styled-components';\n\nexport const isMobile = (props) =>\n  `@media screen and (max-width: ${props.theme.breakpoints.medium}px)`;\n\n// top-level layoout\nexport const BodyContainerFull = styled.div`\n  margin: 0 auto;\n  padding: ${(props) => props.theme.sizing.scale1600} 0 0;\n  ${isMobile} {\n    padding: 0;\n    order: 2;\n  }\n`;\n\n// the problem the following is solving is what happens if the document is very long\n// on a responsive device. If the user toggles the table of content, because the\n// document is long, the TOC will be not visible (above the viewport).\n// to address that, when the TOC is open, we are removing the document from the flow, so\n// that the TOC will be visible. Now, there are several ways to do that, some of which\n// introduce another problem - when closing the table of contents, we want the user to be\n// back exactly where they were before they opened it, as opposed to back on the top.\n// that's one way to approach this -\nexport const BodyContainerToC = styled.div`\n  height: 100%;\n  width: 100%;\n  padding: ${(props) => props.theme.sizing.scale1600} 0 0 300px;\n  ${isMobile} {\n    height: calc(100vh - ${(props) => props.theme.sizing.scale1600});\n    padding: 0;\n    order: 2;\n  }\n`;\n\nexport const BodyContainerInner = styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n`;\n\nexport const Body = styled.div`\n  font: ${(props) => props.theme.typography.font300};\n  width: 100vw;\n  height: 100vh;\n`;\n"],"file":"body.js"}