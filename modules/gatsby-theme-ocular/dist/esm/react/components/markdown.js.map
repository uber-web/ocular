{"version":3,"sources":["../../../../src/react/components/markdown.jsx"],"names":["React","cloneElement","MDXRenderer","MDXProvider","A","GatsbyA","CodeBlock","H1","H2","H3","H4","H5","H6","InlineCode","P","List","ListItem","Pre","Img","BlockQuote","Table","TableHeaderCell","TableBodyCell","parseLinks","CustomLinkWrapper","path","relativeLinks","config","CustomLink","href","props","updatedLink","CustomPre","children","otherProps","Children","map","child","type","displayName","API_REGEX","CODE_REGEX","CustomHeader","ComponentType","id","anchors","test","match","replace","$0","$1","suffix","slice","autolink","key","HeaderWrapper","components","h1","h2","h3","h4","h5","h6","p","ul","li","pre","img","code","table","th","td","blockquote","a","body"],"mappings":"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","sourcesContent":["import React, {cloneElement} from 'react';\nimport {MDXRenderer} from 'gatsby-plugin-mdx';\nimport {MDXProvider} from '@mdx-js/react';\n\n// note - these typographic elements are taken directly from baseui.\n// we can consider customizing them by first importing in styled/index, then\n// giving them special parameters\n\nimport {\n  A,\n  GatsbyA,\n  CodeBlock,\n  H1,\n  H2,\n  H3,\n  H4,\n  H5,\n  H6,\n  InlineCode,\n  P,\n  List,\n  ListItem,\n  Pre,\n  Img,\n  BlockQuote,\n  Table,\n  TableHeaderCell,\n  TableBodyCell\n} from '../styled/typography';\n\nimport {parseLinks} from '../../utils/links-utils.js';\n\nconst CustomLinkWrapper = (path, relativeLinks, config) => {\n  const CustomLink = ({href, ...props}) => {\n    const updatedLink = parseLinks(href, path, relativeLinks, config);\n    return updatedLink ? <GatsbyA to={updatedLink} {...props} /> : <A href={href} {...props} />;\n  };\n  return CustomLink;\n};\n\nconst CustomPre = (props) => {\n  // the point of this component is to distinguish styling of inline <code /> elements\n  // with code blocks (ie <pre><code>...</code></pre>).\n\n  const {children, ...otherProps} = props;\n  return (\n    <Pre {...otherProps}>\n      {React.Children.map(children, (child) => {\n        // this means a child of this <pre> element is a <code> element, or <code> element styled\n        // by Styletron\n        if (child.type === 'code' || child.type.displayName === 'Styled(code)') {\n          return <CodeBlock {...child.props} />;\n        }\n        // else we just clone the element as is\n        return React.cloneElement(child);\n      })}\n    </Pre>\n  );\n};\n\nconst API_REGEX = /^code-classlanguage-text(.*?)code/;\nconst CODE_REGEX = /code-classlanguage-text(.*?)code/g;\n\n// Sanitize auto generated anchor ids\nconst CustomHeader = (ComponentType, id, props, anchors) => {\n  if (!id) {\n    return <ComponentType {...props} />;\n  }\n\n  if (API_REGEX.test(id)) {\n    id = id.match(API_REGEX)[1];\n  } else {\n    id = id.replace(CODE_REGEX, ($0, $1) => $1);\n  }\n  // Make sure we don't have duplicate ids on this page\n  if (anchors[id]) {\n    let suffix = 1;\n    while (anchors[`${id}-${suffix}`]) suffix++;\n    id = `${id}-${suffix}`;\n  }\n  anchors[id] = true;\n\n  const children = props.children.slice();\n  const autolink = children[0];\n  if (autolink.props && autolink.props.href) {\n    children[0] = cloneElement(autolink, {key: 'anchor', href: `#${id}`});\n  }\n  return (\n    <ComponentType {...props} id={id}>\n      {children}\n    </ComponentType>\n  );\n};\n\nexport default (props) => {\n  const {relativeLinks, path, config} = props;\n  // note - we can add many other custom components.\n\n  const anchors = {};\n  const HeaderWrapper = (ComponentType) => {\n    return ({id, ...props}) => CustomHeader(ComponentType, id, props, anchors);\n  };\n\n  const components = {\n    h1: H1,\n    h2: HeaderWrapper(H2),\n    h3: HeaderWrapper(H3),\n    h4: HeaderWrapper(H4),\n    h5: HeaderWrapper(H5),\n    h6: HeaderWrapper(H6),\n    p: P,\n    ul: List,\n    li: ListItem,\n    pre: CustomPre,\n    img: Img,\n    code: InlineCode,\n    table: Table,\n    th: TableHeaderCell,\n    td: TableBodyCell,\n    blockquote: BlockQuote,\n    a: relativeLinks ? CustomLinkWrapper(path, relativeLinks, config) : A\n  };\n\n  return (\n    <MDXProvider components={components}>\n      <MDXRenderer>{props.body}</MDXRenderer>\n    </MDXProvider>\n  );\n};\n"],"file":"markdown.js"}