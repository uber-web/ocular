{"version":3,"sources":["../../../../src/react/components/docs-header.jsx"],"names":["React","Component","ControlledHeader","generateHeaderLinks","propTypes","DocsHeader","props","state","links","renderHeader"],"mappings":";;;;;;;;;;;AAqBA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,gBAAP,IAA0BC,mBAA1B,EAA+CC,SAA/C,QAA+D,oBAA/D;;IASqBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAKA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEL,mBAAmB,CAACG,KAAD;AADf,KAAb;AANiB;AASlB;;;;WAED,wBAAe;AACb,UAAOE,KAAP,GAAgB,KAAKD,KAArB,CAAOC,KAAP;AAEA,aAAO,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEA;AAAzB,SAAoC,KAAKF,KAAzC,EAAP;AACD;;;WAED,kBAAS;AACP,aAAO,KAAKG,YAAL,EAAP;AACD;;;;EApBqCR,S;;SAAnBI,U;AAuBrBA,UAAU,CAACD,SAAX,GAAuBA,SAAvB","sourcesContent":["/* eslint-disable react/no-array-index-key */\n// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport ControlledHeader, {generateHeaderLinks, propTypes} from './header.component';\n\n// we are exposing 2 header components.\n// 1 - DocsHeader, which will update the state of the top level layout.\n//   we need to expose whether the menu is toggled or not because it could\n//   affect how TOC is displayed in smaller screens.\n// 2 - Header, which won't and just maintain its own state.\n// both components are wrappers around ControlledHeader.\n\nexport default class DocsHeader extends Component {\n  constructor(props) {\n    super(props);\n    // we need to know the number of links before render.\n    // this is not an ideal solution.\n    // some of the links which are hardcoded should come from configuration\n    // TODO - let's create the links server side, then pass them to the template as props.\n    this.state = {\n      links: generateHeaderLinks(props)\n    };\n  }\n\n  renderHeader() {\n    const {links} = this.state;\n\n    return <ControlledHeader links={links} {...this.props} />;\n  }\n\n  render() {\n    return this.renderHeader();\n  }\n}\n\nDocsHeader.propTypes = propTypes;\n"],"file":"docs-header.js"}