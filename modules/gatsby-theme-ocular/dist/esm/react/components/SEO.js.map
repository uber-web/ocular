{"version":3,"sources":["../../../../src/react/components/SEO.jsx"],"names":["React","useEffect","Helmet","joinPath","parts","map","part","replace","filter","Boolean","join","SEO","config","path","pageContext","GA_TRACKING_ID","window","gtag","dataLayer","push","arguments","Date","title","description","isPost","siteURL","PROJECT_URL","pathPrefix","image","PROJECT_IMAGE","PROJECT_ORG_LOGO","postURL","PROJECT_NAME","PROJECT_DESC","schemaOrgJSONLD","url","name","itemListElement","position","item","headline","JSON","stringify","siteFBAppID","userTwitter"],"mappings":"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","sourcesContent":["/* global window */\nimport React, {useEffect} from 'react';\nimport Helmet from 'react-helmet';\n\nfunction joinPath(...parts) {\n  return parts\n    .map((part) => part && part.replace(/^\\//, '').replace(/\\/$/, ''))\n    .filter(Boolean)\n    .join('/');\n}\n\n// TODO/ib - modify this component to work with ocular content\nexport default function SEO({config, path, pageContext}) {\n  useEffect(() => {\n    if (!config.GA_TRACKING_ID) {\n      return;\n    }\n    if (typeof window !== 'undefined') {\n      window.dataLayer = window.dataLayer || [];\n      function gtag() {\n        window.dataLayer.push(arguments);\n      }\n      gtag('js', new Date());\n      gtag('config', config.GA_TRACKING_ID);\n    }\n  }, [config.GA_TRACKING_ID]);\n\n  let {title, description} = pageContext;\n\n  const isPost = Boolean(title);\n  const siteURL = joinPath(config.PROJECT_URL, config.pathPrefix);\n  const image = joinPath(siteURL, config.PROJECT_IMAGE || config.PROJECT_ORG_LOGO);\n  const postURL = joinPath(siteURL, path);\n  title = title ? `${config.PROJECT_NAME} | ${title}` : config.PROJECT_NAME;\n  description = description || config.PROJECT_DESC;\n\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: siteURL,\n      name: config.PROJECT_NAME\n    }\n  ];\n  if (isPost) {\n    schemaOrgJSONLD.push([\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': postURL,\n              name: title,\n              image\n            }\n          }\n        ]\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        url: siteURL,\n        name: title,\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image\n        },\n        description\n      }\n    ]);\n  }\n  return (\n    <Helmet>\n      {/* General tags */}\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n\n      {/* Schema.org tags */}\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={isPost ? postURL : siteURL} />\n      {isPost ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n\n      {/* Google Analytics */}\n      {config.GA_TRACKING_ID && (\n        <script\n          async\n          src={`https://www.googletagmanager.com/gtag/js?id=${config.GA_TRACKING_ID}`}\n        ></script>\n      )}\n    </Helmet>\n  );\n}\n"],"file":"SEO.js"}