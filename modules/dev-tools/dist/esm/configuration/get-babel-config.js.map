{"version":3,"sources":["../../../src/configuration/get-babel-config.js"],"names":["TARGETS","DEFAULT_CONFIG","comments","ENV_CONFIG","es5","presets","targets","modules","plugins","esm","useESModules","test","development","module","exports","getBabelConfig","api","options","cache","using","process","env","BABEL_ENV","config","react","push"],"mappings":";;;;;;AAIA,IAAMA,OAAO,GAAG,CAAC,OAAD,EAAU,0BAAV,EAAsC,WAAtC,EAAmD,UAAnD,EAA+D,eAA/D,CAAhB;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AADW,CAAvB;AAIA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,CACP,CACE,YADF,EAEE;AACEC,MAAAA,OAAO,EAAEN,OADX;AAEEO,MAAAA,OAAO,EAAE;AAFX,KAFF,CADO,CADN;AAUHC,IAAAA,OAAO,EAAE,CAAC,0BAAD;AAVN,GADY;AAajBC,EAAAA,GAAG,EAAE;AACHJ,IAAAA,OAAO,EAAE,CACP,CACE,YADF,EAEE;AACEC,MAAAA,OAAO,EAAEN,OADX;AAEEO,MAAAA,OAAO,EAAE;AAFX,KAFF,CADO,CADN;AAUHC,IAAAA,OAAO,EAAE,CAAC,CAAC,0BAAD,EAA6B;AAACE,MAAAA,YAAY,EAAE;AAAf,KAA7B,CAAD;AAVN,GAbY;AAyBjBC,EAAAA,IAAI,EAAE;AACJN,IAAAA,OAAO,EAAE,CACP,CACE,mBADF,EAEE;AACEC,MAAAA,OAAO,EAAE;AADX,KAFF,CADO,CADL;AASJE,IAAAA,OAAO,EAAE,CAAC,UAAD;AATL;AAzBW,CAAnB;AAuCAL,UAAU,CAACS,WAAX,GAAyBT,UAAU,CAACC,GAApC;;AAGAS,MAAM,CAACC,OAAP,CAAeC,cAAf,GAAgC,SAASA,cAAT,CAAwBC,GAAxB,EAA2C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACzED,EAAAA,GAAG,CAACE,KAAJ,CAAUC,KAAV,CAAgB;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAYC,SAAlB;AAAA,GAAhB;;AACA,MAAMC,MAAM,mCAAOtB,cAAP,GAA0BE,UAAU,CAACa,GAAG,CAACK,GAAJ,EAAD,CAApC,CAAZ;;AACAE,EAAAA,MAAM,CAAClB,OAAP,GAAiBkB,MAAM,CAAClB,OAAP,IAAkB,EAAnC;;AACA,MAAIY,OAAO,CAACO,KAAZ,EAAmB;AACjBD,IAAAA,MAAM,CAAClB,OAAP,CAAeoB,IAAf,CAAoB,qBAApB;AACD;;AAEDF,EAAAA,MAAM,CAAClB,OAAP,CAAeoB,IAAf,CAAoB,0BAApB;AACA,SAAOF,MAAP;AACD,CAVD","sourcesContent":["/** @typedef {import('./get-babel-config')} types */\n\n// The following targets are designed to support the most commonly used evergreen browsers.\n// As of Feb 2021 they all support async function, async iterator, and spread operator.\nconst TARGETS = ['>0.2%', 'maintained node versions', 'not ie 11', 'not dead', 'not chrome 49'];\n\nconst DEFAULT_CONFIG = {\n  comments: false\n};\n\nconst ENV_CONFIG = {\n  es5: {\n    presets: [\n      [\n        '@babel/env',\n        {\n          targets: TARGETS,\n          modules: 'commonjs'\n        }\n      ]\n    ],\n    plugins: ['@babel/transform-runtime']\n  },\n  esm: {\n    presets: [\n      [\n        '@babel/env',\n        {\n          targets: TARGETS,\n          modules: false\n        }\n      ]\n    ],\n    plugins: [['@babel/transform-runtime', {useESModules: true}]]\n  },\n  test: {\n    presets: [\n      [\n        '@babel/preset-env',\n        {\n          targets: 'maintained node versions'\n        }\n      ]\n    ],\n    plugins: ['istanbul']\n  }\n};\n\n// Ensure we have an entry for the default BABEL_ENV\nENV_CONFIG.development = ENV_CONFIG.es5;\n\n/** @type {types['getBabelConfig']} */\nmodule.exports.getBabelConfig = function getBabelConfig(api, options = {}) {\n  api.cache.using(() => process.env.BABEL_ENV);\n  const config = {...DEFAULT_CONFIG, ...ENV_CONFIG[api.env()]};\n  config.presets = config.presets || [];\n  if (options.react) {\n    config.presets.push('@babel/preset-react');\n  }\n  // TODO add flag?\n  config.presets.push('@babel/preset-typescript');\n  return config;\n};\n"],"file":"get-babel-config.js"}