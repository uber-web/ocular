{"version":3,"sources":["../../../src/test-utils/expect-assertions.js"],"names":["test","require","tapeEquals","tapeEqualsEpsilon","TestCase","t","result","value","equals","epsilon","throws","currentTest","it","message","testfunc","end","expect"],"mappings":";;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,eAAwCA,OAAO,CAAC,mBAAD,CAA/C;AAAA,IAAOC,UAAP,YAAOA,UAAP;AAAA,IAAmBC,iBAAnB,YAAmBA,iBAAnB;;IAEMC,Q;AACJ,oBAAYC,CAAZ,EAAeC,MAAf,EAAuB;AAAA;;AACrB,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;;;WACD,cAAKC,KAAL,EAAY;AACV,WAAKF,CAAL,CAAOG,MAAP,CAAcD,KAAd;AACD;;;WACD,iBAAQA,KAAR,EAAe;AACbL,MAAAA,UAAU,CAAC,KAAKG,CAAN,EAAS,KAAKC,MAAd,EAAsBC,KAAtB,CAAV;AACD;;;WACD,wBAAeA,KAAf,EAAsBE,OAAtB,EAA+B;AAC7BN,MAAAA,iBAAiB,CAAC,KAAKE,CAAN,EAAS,KAAKC,MAAd,EAAsBC,KAAtB,EAA6BE,OAA7B,CAAjB;AACD;;;WACD,mBAAU;AAAA;;AACR,WAAKJ,CAAL,CAAOK,MAAP,CAAc;AAAA,eAAM,KAAI,CAACJ,MAAL,EAAN;AAAA,OAAd;AACD;;;;;;AAGH,IAAIK,WAAJ;AAEA,OAAO,SAASC,EAAT,CAAYC,OAAZ,EAAqBC,QAArB,EAA+B;AACpCd,EAAAA,IAAI,CAACa,OAAD,EAAU,UAACR,CAAD,EAAO;AACnBM,IAAAA,WAAW,GAAGN,CAAd;AACAS,IAAAA,QAAQ;AACRT,IAAAA,CAAC,CAACU,GAAF;AACD,GAJG,CAAJ;AAKD;AAED,OAAO,SAASC,MAAT,CAAgBT,KAAhB,EAAuB;AAC5B,SAAO,IAAIH,QAAJ,CAAaO,WAAb,EAA0BJ,KAA1B,CAAP;AACD","sourcesContent":["const test = require('tape');\nconst {tapeEquals, tapeEqualsEpsilon} = require('./tape-assertions');\n\nclass TestCase {\n  constructor(t, result) {\n    this.t = t;\n    this.result = result;\n  }\n  toBe(value) {\n    this.t.equals(value);\n  }\n  toEqual(value) {\n    tapeEquals(this.t, this.result, value);\n  }\n  toEqualEpsilon(value, epsilon) {\n    tapeEqualsEpsilon(this.t, this.result, value, epsilon);\n  }\n  toThrow() {\n    this.t.throws(() => this.result());\n  }\n}\n\nlet currentTest;\n\nexport function it(message, testfunc) {\n  test(message, (t) => {\n    currentTest = t;\n    testfunc();\n    t.end();\n  });\n}\n\nexport function expect(value) {\n  return new TestCase(currentTest, value);\n}\n"],"file":"expect-assertions.js"}